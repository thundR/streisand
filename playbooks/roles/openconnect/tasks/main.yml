---
- name: Create the ocserv configuration directory
  file: path={{ ocserv_path }}
        owner=root
        group=root
        mode=750
        state=directory

- name: Generate the CA template file
  template: src=ca.tmpl.j2
            dest={{ ocserv_ca_template_file }}
            owner=root
            group=root
            mode=600

- name: Generate the CA key
  command: certtool --generate-privkey --outfile {{ ocserv_ca_key_file }}
           creates={{ ocserv_ca_key_file }}

- name: Generate the self-signed CA certificate
  command: certtool --generate-self-signed --load-privkey {{ ocserv_ca_key_file }} --template {{ ocserv_ca_template_file }} --outfile {{ ocserv_ca_certificate_file }}
           creates={{ ocserv_ca_certificate_file }}

- name: Generate the server template file
  template: src=server.tmpl.j2
            dest={{ ocserv_server_template_file }}
            owner=root
            group=root
            mode=600

- name: Generate the server key
  command: certtool --generate-privkey --outfile {{ ocserv_server_key_file }}
           creates={{ ocserv_server_key_file }}

- name: Generate the server certificate
  command: certtool --generate-certificate --load-privkey {{ ocserv_server_key_file }} --load-ca-certificate {{ ocserv_ca_certificate_file }} --load-ca-privkey {{ ocserv_ca_key_file }} --template {{ ocserv_server_template_file }} --outfile {{ ocserv_server_certificate_file }}
           creates={{ ocserv_server_certificate_file }}

- name: Generate the client template file
  template: src=client.tmpl.j2
            dest={{ ocserv_client_template_file }}
            owner=root
            group=root
            mode=600

- name: Generate the client key
  command: certtool --generate-privkey --outfile {{ ocserv_client_key_file }}
           creates={{ ocserv_client_key_file }}

- name: Generate the client certificate
  command: certtool --generate-certificate --load-privkey {{ ocserv_client_key_file }} --load-ca-certificate {{ ocserv_ca_certificate_file }} --load-ca-privkey {{ ocserv_ca_key_file }} --template {{ ocserv_client_template_file }} --outfile {{ ocserv_client_certificate_file }}
           creates={{ ocserv_client_certificate_file }}

- name: "Generate a random password that will be used during the PKCS #12 conversion"
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 2 | xargs | sed -e 's/ /-/g' > {{ ocserv_pkcs12_password_file }}
         creates={{ ocserv_pkcs12_password_file }}

- name: "Set permissions on the PKCS #12 password file"
  file: path={{ ocserv_pkcs12_password_file }}
        owner=root
        group=root
        mode=600

- name: "Register the PKCS #12 password"
  command: cat {{ ocserv_pkcs12_password_file }}
  register: ocserv_pkcs12_password

- name: "Generate the PKCS #12 conversion Expect script"
  template: src=create-pkcs12.exp.j2
            dest={{ ocserv_pkcs12_conversion_script }}
            owner=root
            group=root
            mode=700

- name: "Execute the PKCS #12 conversion Expect script"
  command: "{{ ocserv_pkcs12_conversion_script }}
           creates={{ ocserv_client_pkcs12_file }}"

- name: Generate a random ocserv password
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 4 | xargs | sed -e 's/ /-/g' > {{ ocserv_password_file }}
         creates={{ ocserv_password_file }}

- name: Set permissions on the unhashed ocserv password file
  file: path={{ ocserv_password_file }}
        owner=root
        group=root
        mode=600

- name: Register the ocserv password
  command: cat {{ ocserv_password_file }}
  register: ocserv_password

- name: Generate the ocpasswd Expect script
  template: src=create-password.exp.j2
            dest={{ ocserv_create_password_script }}
            owner=root
            group=root
            mode=700

- name: Execute the ocpasswd Expect script
  command: "{{ ocserv_create_password_script }}
           creates={{ ocserv_hashed_password_file }}"

- name: Generate the ocserv configuration file
  template: src=config.j2
            dest={{ ocserv_config_file }}
            owner=root
            group=root
            mode=600
  notify: Restart ocserv

- name: Enable NAT
  command: "{{ ocserv_firewall_rule }}"

- name: Enable IPv4 traffic forwarding
  sysctl: name=net.ipv4.ip_forward
          value=1

- name: Create the OpenConnect/AnyConnect Gateway directory
  file: path={{ ocserv_gateway_location }}
        owner=www-data
        group=www-data
        mode=750
        state=directory

- name: Copy the CA certificate file to the OpenConnect Gateway directory
  command: cp {{ ocserv_ca_certificate_file }} {{ ocserv_gateway_location }}
           creates={{ ocserv_gateway_location }}/ca-cert.pem

- name: "Copy the client PKCS #12 file to the OpenConnect Gateway directory"
  command: cp {{ ocserv_client_pkcs12_file }} {{ ocserv_gateway_location }}
           creates={{ ocserv_gateway_location }}/client.p12

- name: Generate the Markdown OpenConnect/AnyConnect instructions
  template: src=instructions.md.j2
            dest={{ ocserv_markdown_instructions }}

- name: Convert the Markdown OpenConnect/AnyConnect instructions into HTML and surround them with the header and footer template
  shell: markdown {{ ocserv_markdown_instructions }} | cat {{ streisand_header_template }} - {{ streisand_footer_template }} > {{ ocserv_html_instructions }}
